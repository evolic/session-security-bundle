services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false

    Loculus\SessionSecurityBundle\:
        resource: '../../../src/'
        exclude:
            - '../../../src/DependencyInjection/'

    Loculus\SessionSecurityBundle\EventListener\RequestListener:
        arguments:
            $validationManager: '@Loculus\SessionSecurityBundle\ValidationManager'
            $config: []
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.request', priority: null }

    Loculus\SessionSecurityBundle\EventListener\InvalidSessionListener:
        arguments:
            $invalidationStrategyManager: '@Loculus\SessionSecurityBundle\InvalidationStrategyManager'
            $config: []
        tags:
            - { name: 'kernel.event_listener', event: 'session_security.invalid_session', priority: null }

    Loculus\SessionSecurityBundle\Factory\GetBrowserFactoryInterface: '@Loculus\SessionSecurityBundle\Factory\GetBrowserFactory'
    Loculus\SessionSecurityBundle\Factory\BrowserFingerprintFactoryInterface: '@Loculus\SessionSecurityBundle\Factory\BrowserFingerprintFactory'

    Loculus\SessionSecurityBundle\Validator\HttpUserAgentValidator:
        arguments:
            $request: '@request'
    Loculus\SessionSecurityBundle\Validator\RemoteAddressValidator:
        arguments:
            $request: '@request'
    Loculus\SessionSecurityBundle\Validator\BrowserNameValidator:
        arguments:
            $browserFingerprintFactory: '@Loculus\SessionSecurityBundle\Factory\BrowserFingerprintFactoryInterface'
    Loculus\SessionSecurityBundle\Validator\BrowserPlatformValidator:
        arguments:
            $browserFingerprintFactory: '@Loculus\SessionSecurityBundle\Factory\BrowserFingerprintFactoryInterface'
    Loculus\SessionSecurityBundle\Validator\BrowserDeviceTypeValidator:
        arguments:
            $browserFingerprintFactory: '@Loculus\SessionSecurityBundle\Factory\BrowserFingerprintFactoryInterface'
